version: '3.7'

services:
  netdata:
    image: netdata/netdata:v1.47.4
    restart: unless-stopped
    cap_add:
      - SYS_PTRACE  # Required for monitoring
    security_opt:
      - apparmor=unconfined  # Allow more permissions for Netdata monitoring
    volumes:
      - ./netdata/config:/etc/netdata  # Custom configuration files from your repo
      - netdata_lib:/var/lib/netdata  # Persistent storage for historical data
      - netdata_cache:/var/cache/netdata  # Cache directory for faster performance
      - /proc:/host/proc:ro  # System metrics
      - /sys:/host/sys:ro
      - /etc/os-release:/host/etc/os-release:ro
      - /var/run/docker.sock:/var/run/docker.sock  # Docker socket for container metrics
    environment:
      - DOCKER_HOST=unix:///var/run/docker.sock  # Set Docker socket for container names
    networks:
      - netdata-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:19999"]
      interval: 30s
      timeout: 10s
      retries: 5
    labels:
      - "coolify.managed=false"  # Não expor este serviço

  nginx:
    image: nginx:alpine
    ports:
      - "19999:80"  # Expõe na porta 19999 do host
    restart: unless-stopped
    environment:
      - NETDATA_USER=${NETDATA_USER:-admin}
      - NETDATA_PASSWORD=${NETDATA_PASSWORD}
    command: sh -c "
      echo '🔧 Iniciando configuração do Netdata...' &&
      apk add --no-cache apache2-utils &&
      echo '🔐 Gerando autenticação...' &&
      htpasswd -cb /etc/nginx/.htpasswd \"$$NETDATA_USER\" \"$$NETDATA_PASSWORD\" &&
      echo '📝 Criando configuração do Nginx...' &&
      echo 'events { worker_connections 1024; }' > /etc/nginx/nginx.conf &&
      echo 'http {' >> /etc/nginx/nginx.conf &&
      echo '  upstream netdata { server netdata:19999; keepalive 64; }' >> /etc/nginx/nginx.conf &&
      echo '  server {' >> /etc/nginx/nginx.conf &&
      echo '    listen 80;' >> /etc/nginx/nginx.conf &&
      echo '    server_name _;' >> /etc/nginx/nginx.conf &&
      echo '    auth_basic \"Netdata\";' >> /etc/nginx/nginx.conf &&
      echo '    auth_basic_user_file /etc/nginx/.htpasswd;' >> /etc/nginx/nginx.conf &&
      echo '    location / {' >> /etc/nginx/nginx.conf &&
      echo '      proxy_pass http://netdata;' >> /etc/nginx/nginx.conf &&
      echo '      proxy_http_version 1.1;' >> /etc/nginx/nginx.conf &&
      echo '      proxy_set_header Host \$$host;' >> /etc/nginx/nginx.conf &&
      echo '      proxy_set_header X-Real-IP \$$remote_addr;' >> /etc/nginx/nginx.conf &&
      echo '      proxy_set_header X-Forwarded-For \$$proxy_add_x_forwarded_for;' >> /etc/nginx/nginx.conf &&
      echo '      proxy_set_header Connection keep-alive;' >> /etc/nginx/nginx.conf &&
      echo '    }' >> /etc/nginx/nginx.conf &&
      echo '  }' >> /etc/nginx/nginx.conf &&
      echo '}' >> /etc/nginx/nginx.conf &&
      echo '✅ Configuração concluída! Usuário:' \"$$NETDATA_USER\" &&
      echo '🚀 Iniciando Nginx...' &&
      nginx -g 'daemon off;'
      "
    depends_on:
      - netdata
    networks:
      - netdata-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    labels:
      - "coolify.managed=true"  # Este é o serviço principal a ser exposto

networks:
  netdata-network:
    driver: bridge

volumes:
  netdata_lib:
  netdata_cache: